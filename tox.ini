[tox]
envlist=pytest-check-x86, pytest-check-arm64, pytest-check-s390x, unused-code, utilities-unittests
skipsdist=True

[testenv]
basepython = python3

[testenv:pytest-check-x86]
basepython = python3.12
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
    LC_ALL = en_US.utf8
    LANG = en_US.utf8
    UV_PYTHON = python3.12
    OPENSHIFT_VIRTUALIZATION_TEST_IMAGES_ARCH = x86_64
deps=
    uv
commands =
    uv run pytest --tc-file=tests/global_config.py --collect-only
    uv run pytest --tc-file=tests/global_config.py --upgrade=cnv --cnv-image=NA --cnv-version=NA --collect-only
    uv run pytest --tc-file=tests/global_config.py --upgrade=ocp --ocp-image=NA --collect-only
    uv run pytest --tc-file=tests/global_config.py --upgrade=eus --eus-ocp-images=NA,NA --collect-only
    uv run pytest --tc-file=tests/global_config.py --upgrade_custom=cnv --cnv-image=NA --cnv-version=NA --collect-only
    uv run pytest --tc-file=tests/global_config.py --upgrade_custom=ocp --ocp-image=NA --collect-only
    uv run pytest --tc-file=tests/global_config_rh_it.py --collect-only
    uv run pytest --tc-file=tests/global_config.py -m smoke --collect-only
    uv run pytest --tc-file=tests/global_config.py --tc-format=python --setup-plan

[testenv:pytest-check-arm64]
basepython = python3.12
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
    LC_ALL = en_US.utf8
    LANG = en_US.utf8
    UV_PYTHON = python3.12
    OPENSHIFT_VIRTUALIZATION_TEST_IMAGES_ARCH = arm64
deps=
    uv
commands =
    uv run pytest --tc-file=tests/global_config.py --collect-only -m arm64

[testenv:pytest-check-s390x]
basepython = python3.12
recreate=True
setenv =
 PYTHONPATH = {toxinidir}
 LC_ALL = en_US.utf8
 LANG = en_US.utf8
 UV_PYTHON = python3.12
 OPENSHIFT_VIRTUALIZATION_TEST_IMAGES_ARCH = s390x
deps=
 uv
commands =
 uv run pytest --tc-file=tests/global_config.py --collect-only  -m s390x


# Polarion
# Should run on every commit.
[testenv:verify-tc-requirement-polarion]
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
deps:
    python-utility-scripts
commands =
    pyutils-polarion-verify-tc-requirements --project-id "CNV" --branch "origin/main"


# Should run only after merged.
[testenv:mark-automated-polarion]
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
deps:
    python-utility-scripts
commands =
    pyutils-polarion-set-automated --project-id "CNV" {posargs}


#Jira
[testenv:verify-bugs-are-open]
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
deps:
    python-utility-scripts
commands =
    pip install pip --upgrade
    pip install tox --upgrade
    pyutils-jira --config-file-path jira.cfg --target-versions "vfuture,4.20.0,4.20.z" --verbose

#Unused code
[testenv:unused-code]
recreate=True
setenv =
    PYTHONPATH = {toxinidir}
deps:
    python-utility-scripts
commands =
    pyutils-unusedcode --exclude-files "pytest_matrix_utils.py" --exclude-function-prefixes "pytest_"

# Utilities unit tests with coverage verification
[testenv:utilities-unittests]
basepython = python3.12
recreate = True
changedir = {toxinidir}/utilities
setenv =
    PYTHONPATH = {toxinidir}
    LC_ALL = en_US.utf8
    LANG = en_US.utf8
    UV_PYTHON = python3.12
deps =
    uv
commands =
    # Run unit tests with coverage threshold verification (90% minimum)
    uv run pytest tests/test_architecture.py tests/test_bitwarden.py tests/test_console.py tests/test_constants.py tests/test_database.py tests/test_logger.py tests/test_exceptions.py tests/test_vnc_utils.py tests/test_must_gather.py tests/test_pytest_matrix_utils.py --cov=. --cov-report=term --cov-report=html:htmlcov --cov-report=xml --cov-fail-under=90 -v
    # Display final coverage summary
    uv run python -c "print('\nâœ… All tests passed with required coverage threshold!')"
